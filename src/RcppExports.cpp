// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// CppScore
arma::vec CppScore(arma::mat X, arma::vec v, arma::mat Rhat, arma::vec y, arma::vec mu, int N, float phi, arma::vec w);
RcppExport SEXP pgee_mixed_CppScore(SEXP XSEXP, SEXP vSEXP, SEXP RhatSEXP, SEXP ySEXP, SEXP muSEXP, SEXP NSEXP, SEXP phiSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v(vSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Rhat(RhatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< float >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    __result = Rcpp::wrap(CppScore(X, v, Rhat, y, mu, N, phi, w));
    return __result;
END_RCPP
}
// CppHess
arma::mat CppHess(arma::mat X, arma::vec v, arma::mat Rhat, float phi, int N, arma::vec w);
RcppExport SEXP pgee_mixed_CppHess(SEXP XSEXP, SEXP vSEXP, SEXP RhatSEXP, SEXP phiSEXP, SEXP NSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v(vSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Rhat(RhatSEXP);
    Rcpp::traits::input_parameter< float >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    __result = Rcpp::wrap(CppHess(X, v, Rhat, phi, N, w));
    return __result;
END_RCPP
}
// CppM
arma::mat CppM(arma::vec y, arma::mat X, arma::vec mu, arma::vec v, arma::mat Rhat, float phi, int N, arma::vec w);
RcppExport SEXP pgee_mixed_CppM(SEXP ySEXP, SEXP XSEXP, SEXP muSEXP, SEXP vSEXP, SEXP RhatSEXP, SEXP phiSEXP, SEXP NSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v(vSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Rhat(RhatSEXP);
    Rcpp::traits::input_parameter< float >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    __result = Rcpp::wrap(CppM(y, X, mu, v, Rhat, phi, N, w));
    return __result;
END_RCPP
}
// CppIncBeta
arma::vec CppIncBeta(Rcpp::NumericVector beta, Rcpp::NumericVector score, Rcpp::NumericMatrix Hess, Rcpp::NumericMatrix Emat, int n);
RcppExport SEXP pgee_mixed_CppIncBeta(SEXP betaSEXP, SEXP scoreSEXP, SEXP HessSEXP, SEXP EmatSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type score(scoreSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Hess(HessSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Emat(EmatSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    __result = Rcpp::wrap(CppIncBeta(beta, score, Hess, Emat, n));
    return __result;
END_RCPP
}
// CppAlphaCS
float CppAlphaCS(arma::vec pres, arma::vec w, int m, int p, float phi);
RcppExport SEXP pgee_mixed_CppAlphaCS(SEXP presSEXP, SEXP wSEXP, SEXP mSEXP, SEXP pSEXP, SEXP phiSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type pres(presSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< float >::type phi(phiSEXP);
    __result = Rcpp::wrap(CppAlphaCS(pres, w, m, p, phi));
    return __result;
END_RCPP
}
// CppAlphaAR1
float CppAlphaAR1(arma::vec pres, arma::vec w, int m, int p, float phi);
RcppExport SEXP pgee_mixed_CppAlphaAR1(SEXP presSEXP, SEXP wSEXP, SEXP mSEXP, SEXP pSEXP, SEXP phiSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type pres(presSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< float >::type phi(phiSEXP);
    __result = Rcpp::wrap(CppAlphaAR1(pres, w, m, p, phi));
    return __result;
END_RCPP
}
// PenScore
arma::vec PenScore(Rcpp::NumericVector beta, Rcpp::NumericVector score, Rcpp::NumericMatrix Emat, int n);
RcppExport SEXP pgee_mixed_PenScore(SEXP betaSEXP, SEXP scoreSEXP, SEXP EmatSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type score(scoreSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Emat(EmatSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    __result = Rcpp::wrap(PenScore(beta, score, Emat, n));
    return __result;
END_RCPP
}
// samemats
bool samemats(arma::mat X, arma::mat Y);
RcppExport SEXP pgee_mixed_samemats(SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    __result = Rcpp::wrap(samemats(X, Y));
    return __result;
END_RCPP
}
// CppW
arma::mat CppW(arma::mat X, arma::vec v, arma::mat Rhat, int N);
RcppExport SEXP pgee_mixed_CppW(SEXP XSEXP, SEXP vSEXP, SEXP RhatSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v(vSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Rhat(RhatSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    __result = Rcpp::wrap(CppW(X, v, Rhat, N));
    return __result;
END_RCPP
}
// CppHess2
arma::mat CppHess2(arma::mat X, arma::vec v, float alpha, float phi, int N, arma::vec w);
RcppExport SEXP pgee_mixed_CppHess2(SEXP XSEXP, SEXP vSEXP, SEXP alphaSEXP, SEXP phiSEXP, SEXP NSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v(vSEXP);
    Rcpp::traits::input_parameter< float >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< float >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    __result = Rcpp::wrap(CppHess2(X, v, alpha, phi, N, w));
    return __result;
END_RCPP
}
// CppScore2
arma::vec CppScore2(arma::mat X, arma::vec v, float alpha, arma::vec y, arma::vec mu, int N, float phi, arma::vec w);
RcppExport SEXP pgee_mixed_CppScore2(SEXP XSEXP, SEXP vSEXP, SEXP alphaSEXP, SEXP ySEXP, SEXP muSEXP, SEXP NSEXP, SEXP phiSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v(vSEXP);
    Rcpp::traits::input_parameter< float >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< float >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    __result = Rcpp::wrap(CppScore2(X, v, alpha, y, mu, N, phi, w));
    return __result;
END_RCPP
}
// CppM2
arma::mat CppM2(arma::vec y, arma::mat X, arma::vec mu, arma::vec v, float alpha, float phi, int N, arma::vec w);
RcppExport SEXP pgee_mixed_CppM2(SEXP ySEXP, SEXP XSEXP, SEXP muSEXP, SEXP vSEXP, SEXP alphaSEXP, SEXP phiSEXP, SEXP NSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v(vSEXP);
    Rcpp::traits::input_parameter< float >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< float >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    __result = Rcpp::wrap(CppM2(y, X, mu, v, alpha, phi, N, w));
    return __result;
END_RCPP
}
// CppW2
arma::mat CppW2(arma::mat X, arma::vec v, arma::mat Rhat, int N, arma::vec w);
RcppExport SEXP pgee_mixed_CppW2(SEXP XSEXP, SEXP vSEXP, SEXP RhatSEXP, SEXP NSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v(vSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Rhat(RhatSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    __result = Rcpp::wrap(CppW2(X, v, Rhat, N, w));
    return __result;
END_RCPP
}
